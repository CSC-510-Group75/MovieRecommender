name: Commit Count

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update_commit_count:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Get current commit count
        id: get_commit_count
        run: |
          # If commit-count.txt exists, read and increment count; otherwise, start at 1
          if [[ -f commit-count.txt ]]; then
            count=$(cat commit-count.txt)
            count=$((count + 1))
          else
            count=1
          fi
          echo $count > commit-count.txt
          echo "::set-output name=count::$count"

      - name: Create commit count badge
        run: |
          count=${{ steps.get_commit_count.outputs.count }}
          cat <<EOF > badge.json
          {
            "schemaVersion": 1,
            "label": "Commits",
            "message": "$count",
            "color": "blue"
          }
          EOF
          mkdir -p badges
          mv badge.json badges/commit-badge.json

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Setup Git Authentication
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Fetch Latest Changes
        run: |
          git fetch origin

      - name: Rebase Latest Changes
        run: |
          git rebase origin/main || {
            echo "Rebase failed; trying to merge instead."
            git merge origin/main
          }

      - name: Commit and Push Badge
        run: |
          git add commit-count.txt badges/commit-badge.json
          git commit -m "Update commit count to ${{ steps.get_commit_count.outputs.count }}" || echo "No changes to commit"
          git push origin HEAD:main
